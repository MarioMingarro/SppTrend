num_spp_sa <- num_spp - num_spp_sc # 20 especies con tendencia
spp_sa <- paste0("spp_", (num_spp_sc + 1):num_spp, "_SA")
data_sa <- lapply(spp_sa, function(sp) {
hemisphere <- sample(c("North", "South", "Both", "Opposite"), 1) # Asignar hemisferio aleatorio
if (hemisphere == "North") {
data.frame(
species = sp,
lat = runif(num_years, min = 30, max = 70) + (years - 1900) * 0.1, # Tendencia positiva en el norte
lon = runif(num_years, min = -180, max = 180),
year = years
) %>% filter(lat > 0)
} else if (hemisphere == "South") {
data.frame(
species = sp,
lat = runif(num_years, min = -70, max = -30) - (years - 1900) * 0.1, # Tendencia negativa en el sur
lon = runif(num_years, min = -180, max = 180),
year = years
) %>% filter(lat < 0)
} else if(hemisphere == "Both"){
rbind(
data.frame(
species = sp,
lat = runif(num_years / 2, min = -70, max = -30) - (years[1:(num_years / 2)] - 1900) * 0.1, # Tendencia negativa en el sur
lon = runif(num_years / 2, min = -180, max = 180),
year = years[1:(num_years / 2)]
) %>% filter(lat < 0),
data.frame(
species = sp,
lat = runif(num_years / 2, min = 30, max = 70) + (years[(num_years / 2 + 1):num_years] - 1900) * 0.1, # Tendencia positiva en el norte
lon = runif(num_years / 2, min = -180, max = 180),
year = years[(num_years / 2 + 1):num_years]
) %>% filter(lat >0)
)
} else {
rbind(
data.frame(
species = sp,
lat = runif(num_years / 2, min = -30, max = -70) + (years[1:(num_years / 2)] - 1900) * 0.1, # Tendencia negativa en el sur
lon = runif(num_years / 2, min = -180, max = 180),
year = years[1:(num_years / 2)]
) %>% filter(lat < 0),
data.frame(
species = sp,
lat = runif(num_years / 2, min = 30, max = 70) + (years[(num_years / 2 + 1):num_years] - 1900) * 0.1, # Tendencia positiva en el norte
lon = runif(num_years / 2, min = -180, max = 180),
year = years[(num_years / 2 + 1):num_years]
) %>% filter(lat >0)
)
}
}) %>% bind_rows()
# Combinar todos los datos
Data <- bind_rows(data_sc, data_sa)
colnames(Data) <- c("species","Lat"  ,   "Lon"   ,  "year" )
predictor <- "year"
responses <- c("Lat")
spp <- unique(Data$species)
spp_trends_results <- spp_trend(Data, spp, predictor, responses, n_min = 10)
View(spp_trends_results)
#'
#' @importFrom dplyr select mutate case_when all_of lead group_by summarise if_else ungroup
#' @importFrom tidyr pivot_wider
#'
#' @examples
#' \dontrun{
#' # Example data remains the same
#' }
#'
#' @export
spp_strategy_poleward <- function(spp_trend_world_result,
sig_level = 0.05,
responses = responses) {
classify_spatial_standard <- function(pvalue, dif_pvalue, trend) {
dplyr::case_when(
pvalue > sig_level ~ "SC",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend > 0 ~ "SA",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend < 0 ~ "SD",
TRUE ~ "SC"
)
}
classify_lat_poleward <- function(pvalue, dif_pvalue, trend, hemisphere) {
dplyr::case_when(
pvalue > sig_level ~ "SC",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend > 0 & hemisphere == "North" ~ "SP",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend < 0 & hemisphere == "North" ~ "SE",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend > 0 & hemisphere == "South" ~ "SE",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend < 0 & hemisphere == "South" ~ "SP",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend > 0 & hemisphere == "Both" ~ "SA",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend < 0 & hemisphere == "Both" ~ "SD",
TRUE ~ "SC"
)
}
classify_thermal <- function(pvalue, dif_pvalue, trend) {
dplyr::case_when(
pvalue > sig_level ~ "TC",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend < 0 ~ "TA",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend > 0 ~ "TT",
TRUE ~ "TC"
)
}
required_cols <- c(
"species",
"trend",
"t",
"pvalue",
"responses",
"dif_t",
"dif_pvalue",
"n",
"hemisphere"
)
if (!all(required_cols %in% names(spp_trend_world_result))) {
missing_cols <- setdiff(required_cols, names(spp_trend_world_result))
stop(
paste(
"Error: The following columns were not found in 'spp_trends_world_results':",
paste(missing_cols, collapse = ", "),
". The required columns are:",
paste(required_cols, collapse = ", ")
)
)
}
strategies <- spp_trend_world_result %>%
dplyr::select(dplyr::all_of(intersect(
required_cols, names(spp_trends_world_result)
))) %>%
dplyr::mutate(
Spatial_Lat_Poleward = dplyr::case_when(
.data$responses == "Lat" ~ classify_lat_poleward(
.data$pvalue,
.data$dif_pvalue,
.data$trend,
.data$hemisphere
),
TRUE ~ NA_character_
),
Spatial_Lon = dplyr::case_when(
.data$responses == "Lon" ~ classify_spatial_standard(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Spatial_Ele = dplyr::case_when(
.data$responses == "Ele" ~ classify_spatial_standard(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Thermal_Tmx = dplyr::case_when(
.data$responses == "Tmx" ~ classify_thermal(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Thermal_Tmn = dplyr::case_when(
.data$responses == "Tmn" ~ classify_thermal(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Thermal_Tme = dplyr::case_when(
.data$responses == "Tme" ~ classify_thermal(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
)
) %>%
dplyr::group_by(species, hemisphere) %>%
dplyr::summarise(
n = sum(n),
Spatial_Lat_Poleward = dplyr::first(Spatial_Lat_Poleward),
Spatial_Lon = if ("Lon" %in% unique(responses))
dplyr::first(Spatial_Lon[!is.na(Spatial_Lon)])
else
NULL,
Spatial_Ele = if ("Ele" %in% unique(responses))
dplyr::first(Spatial_Ele[!is.na(Spatial_Ele)])
else
NULL,
Thermal_Tmx = if ("Tmx" %in% unique(responses))
dplyr::first(Thermal_Tmx[!is.na(Thermal_Tmx)])
else
NULL,
Thermal_Tmn = if ("Tmn" %in% unique(responses))
dplyr::first(Thermal_Tmn[!is.na(Thermal_Tmn)])
else
NULL,
Thermal_Tme = if ("Tme" %in% unique(responses))
dplyr::first(Thermal_Tme[!is.na(Thermal_Tme)])
else
NULL,
.groups = "drop"
) %>%
tidyr::pivot_wider(
names_from = hemisphere,
values_from = Spatial_Lat_Poleward,
names_prefix = "Lat_"
) %>%
dplyr::ungroup()
}
spp_strategy_poleward_results <- spp_strategy_poleward(spp_trends_results, bonferroni = 0.05, responses = responses)
#'
#' @importFrom dplyr select mutate case_when all_of lead group_by summarise if_else ungroup
#' @importFrom tidyr pivot_wider
#'
#' @examples
#' \dontrun{
#' # Example data remains the same
#' }
#'
#' @export
spp_strategy_poleward <- function(spp_trend_result,
sig_level = 0.05,
responses = responses) {
classify_spatial_standard <- function(pvalue, dif_pvalue, trend) {
dplyr::case_when(
pvalue > sig_level ~ "SC",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend > 0 ~ "SA",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend < 0 ~ "SD",
TRUE ~ "SC"
)
}
classify_lat_poleward <- function(pvalue, dif_pvalue, trend, hemisphere) {
dplyr::case_when(
pvalue > sig_level ~ "SC",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend > 0 & hemisphere == "North" ~ "SP",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend < 0 & hemisphere == "North" ~ "SE",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend > 0 & hemisphere == "South" ~ "SE",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend < 0 & hemisphere == "South" ~ "SP",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend > 0 & hemisphere == "Both" ~ "SA",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend < 0 & hemisphere == "Both" ~ "SD",
TRUE ~ "SC"
)
}
classify_thermal <- function(pvalue, dif_pvalue, trend) {
dplyr::case_when(
pvalue > sig_level ~ "TC",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend < 0 ~ "TA",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend > 0 ~ "TT",
TRUE ~ "TC"
)
}
required_cols <- c(
"species",
"trend",
"t",
"pvalue",
"responses",
"dif_t",
"dif_pvalue",
"n",
"hemisphere"
)
if (!all(required_cols %in% names(spp_trend_world_result))) {
missing_cols <- setdiff(required_cols, names(spp_trend_world_result))
stop(
paste(
"Error: The following columns were not found in 'spp_trends_world_results':",
paste(missing_cols, collapse = ", "),
". The required columns are:",
paste(required_cols, collapse = ", ")
)
)
}
strategies <- spp_trend_world_result %>%
dplyr::select(dplyr::all_of(intersect(
required_cols, names(spp_trends_world_result)
))) %>%
dplyr::mutate(
Spatial_Lat_Poleward = dplyr::case_when(
.data$responses == "Lat" ~ classify_lat_poleward(
.data$pvalue,
.data$dif_pvalue,
.data$trend,
.data$hemisphere
),
TRUE ~ NA_character_
),
Spatial_Lon = dplyr::case_when(
.data$responses == "Lon" ~ classify_spatial_standard(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Spatial_Ele = dplyr::case_when(
.data$responses == "Ele" ~ classify_spatial_standard(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Thermal_Tmx = dplyr::case_when(
.data$responses == "Tmx" ~ classify_thermal(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Thermal_Tmn = dplyr::case_when(
.data$responses == "Tmn" ~ classify_thermal(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Thermal_Tme = dplyr::case_when(
.data$responses == "Tme" ~ classify_thermal(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
)
) %>%
dplyr::group_by(species, hemisphere) %>%
dplyr::summarise(
n = sum(n),
Spatial_Lat_Poleward = dplyr::first(Spatial_Lat_Poleward),
Spatial_Lon = if ("Lon" %in% unique(responses))
dplyr::first(Spatial_Lon[!is.na(Spatial_Lon)])
else
NULL,
Spatial_Ele = if ("Ele" %in% unique(responses))
dplyr::first(Spatial_Ele[!is.na(Spatial_Ele)])
else
NULL,
Thermal_Tmx = if ("Tmx" %in% unique(responses))
dplyr::first(Thermal_Tmx[!is.na(Thermal_Tmx)])
else
NULL,
Thermal_Tmn = if ("Tmn" %in% unique(responses))
dplyr::first(Thermal_Tmn[!is.na(Thermal_Tmn)])
else
NULL,
Thermal_Tme = if ("Tme" %in% unique(responses))
dplyr::first(Thermal_Tme[!is.na(Thermal_Tme)])
else
NULL,
.groups = "drop"
) %>%
tidyr::pivot_wider(
names_from = hemisphere,
values_from = Spatial_Lat_Poleward,
names_prefix = "Lat_"
) %>%
dplyr::ungroup()
}
spp_strategy_poleward_results <- spp_strategy_poleward(spp_trend_result,
sig_level = 0.05,
responses = responses)
#'
#' @importFrom dplyr select mutate case_when all_of lead group_by summarise if_else ungroup
#' @importFrom tidyr pivot_wider
#'
#' @examples
#' \dontrun{
#' # Example data remains the same
#' }
#'
#' @export
spp_strategy_poleward <- function(spp_trend_result,
sig_level = 0.05,
responses = responses) {
classify_spatial_standard <- function(pvalue, dif_pvalue, trend) {
dplyr::case_when(
pvalue > sig_level ~ "SC",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend > 0 ~ "SA",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend < 0 ~ "SD",
TRUE ~ "SC"
)
}
classify_lat_poleward <- function(pvalue, dif_pvalue, trend, hemisphere) {
dplyr::case_when(
pvalue > sig_level ~ "SC",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend > 0 & hemisphere == "North" ~ "SP",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend < 0 & hemisphere == "North" ~ "SE",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend > 0 & hemisphere == "South" ~ "SE",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend < 0 & hemisphere == "South" ~ "SP",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend > 0 & hemisphere == "Both" ~ "SA",
pvalue <= sig_level &
dif_pvalue <= sig_level &
trend < 0 & hemisphere == "Both" ~ "SD",
TRUE ~ "SC"
)
}
classify_thermal <- function(pvalue, dif_pvalue, trend) {
dplyr::case_when(
pvalue > sig_level ~ "TC",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend < 0 ~ "TA",
pvalue <= sig_level &
dif_pvalue <= sig_level & trend > 0 ~ "TT",
TRUE ~ "TC"
)
}
required_cols <- c(
"species",
"trend",
"t",
"pvalue",
"responses",
"dif_t",
"dif_pvalue",
"n",
"hemisphere"
)
if (!all(required_cols %in% names(spp_trend_result))) {
missing_cols <- setdiff(required_cols, names(spp_trend_result))
stop(
paste(
"Error: The following columns were not found in 'spp_trends_world_results':",
paste(missing_cols, collapse = ", "),
". The required columns are:",
paste(required_cols, collapse = ", ")
)
)
}
strategies <- spp_trend_result %>%
dplyr::select(dplyr::all_of(intersect(
required_cols, names(spp_trends_world_result)
))) %>%
dplyr::mutate(
Spatial_Lat_Poleward = dplyr::case_when(
.data$responses == "Lat" ~ classify_lat_poleward(
.data$pvalue,
.data$dif_pvalue,
.data$trend,
.data$hemisphere
),
TRUE ~ NA_character_
),
Spatial_Lon = dplyr::case_when(
.data$responses == "Lon" ~ classify_spatial_standard(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Spatial_Ele = dplyr::case_when(
.data$responses == "Ele" ~ classify_spatial_standard(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Thermal_Tmx = dplyr::case_when(
.data$responses == "Tmx" ~ classify_thermal(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Thermal_Tmn = dplyr::case_when(
.data$responses == "Tmn" ~ classify_thermal(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
),
Thermal_Tme = dplyr::case_when(
.data$responses == "Tme" ~ classify_thermal(.data$pvalue, .data$dif_pvalue, .data$trend),
TRUE ~ NA_character_
)
) %>%
dplyr::group_by(species, hemisphere) %>%
dplyr::summarise(
n = sum(n),
Spatial_Lat_Poleward = dplyr::first(Spatial_Lat_Poleward),
Spatial_Lon = if ("Lon" %in% unique(responses))
dplyr::first(Spatial_Lon[!is.na(Spatial_Lon)])
else
NULL,
Spatial_Ele = if ("Ele" %in% unique(responses))
dplyr::first(Spatial_Ele[!is.na(Spatial_Ele)])
else
NULL,
Thermal_Tmx = if ("Tmx" %in% unique(responses))
dplyr::first(Thermal_Tmx[!is.na(Thermal_Tmx)])
else
NULL,
Thermal_Tmn = if ("Tmn" %in% unique(responses))
dplyr::first(Thermal_Tmn[!is.na(Thermal_Tmn)])
else
NULL,
Thermal_Tme = if ("Tme" %in% unique(responses))
dplyr::first(Thermal_Tme[!is.na(Thermal_Tme)])
else
NULL,
.groups = "drop"
) %>%
tidyr::pivot_wider(
names_from = hemisphere,
values_from = Spatial_Lat_Poleward,
names_prefix = "Lat_"
) %>%
dplyr::ungroup()
}
spp_strategy_poleward_results <- spp_strategy_poleward(spp_trend_result,
sig_level = 0.05,
responses = responses)
View(spp_strategy_poleward_results)
View(spp_trend_result_plo)
spp_strategy_poleward_results <- spp_strategy_poleward(spp_trends_results,
sig_level = 0.05,
responses = responses)
View(spp_strategy_poleward_results)
